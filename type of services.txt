

demooooooo

1. ClusterIP Service (Default)
A ClusterIP service exposes the service on a cluster-internal IP. This type of service is only reachable within the cluster.

apiVersion: v1
kind: Pod
metadata:
  name: clinic-web1
  labels:
    app: clinic-web1
spec:
  containers:
  - name: clinicweb1-container
    image: lokeshjyo01/clinic-website
    ports:
    - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: clinicweb-service
spec:
  selector:
    app: clinic-web1
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP  # Default type, can be omitted





1. NodePort Service
A NodePort service exposes the service on each node’s IP at a static port, making it accessible externally via <NodeIP>:<NodePort>. Here’s how you can modify your service manifest:

apiVersion: v1
kind: Pod
metadata:
  name: clinic-web2
  labels:
    app: clinic-web2
spec:
  containers:
    - name: clinicweb2-container
      image: lokeshjyo01/clinic-website
      ports:
        - containerPort: 80  # Assuming your application listens on port 80

---

apiVersion: v1
kind: Service
metadata:
  name: clinicweb2-service
spec:
  selector:
    app: clinic-web2
  ports:
    - protocol: TCP
      port: 80  # External access port
      targetPort: 80  # Port the pod listens on
      nodePort: 30000  # Optional; Kubernetes will automatically assign a port in the default range (30000-32767) if not specified
  type: NodePort

http://44.200.159.215:30000

http://<External NodePort IP>:30000




